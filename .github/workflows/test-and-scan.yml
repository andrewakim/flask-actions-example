name: TestNScan

on:
  # push:
  #   branches: [ master ]
  # pull_request:
  #   branches: [ master ]
  workflow_dispatch:

jobs:
  pytest:
    if: always() # So the test summary creates even if the test fails
    name: Test Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7"]

    steps:
      - uses: actions/checkout@v3
        name: Setup Python ${{ matrix.python-version }}
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run PyTests
        run: pytest

      # Trying Ed's test summary workflow
      - name: Create Test Summary
        uses: ./bin
        with:
          paths: test/results/*.xml
          output: test/results/results.html

      - name: Upload Test Summary
        uses: actions/upload-artifact@v3
        with:
          name: test-summary
          path: test/results/results.html

